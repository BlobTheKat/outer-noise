const {instance: {exports}, module} = await WebAssembly.instantiate(Uint8Array.from(atob('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'), c => c.charCodeAt()))
export const seed = new Int32Array(8)
const mem = new DataView(exports.memory.buffer)
const sd = +exports.seed, off = +exports.offsets
const ch = new Uint8Array(exports.memory.buffer, +exports.chunk, 512)

export function genNoise(cb, x, y, localSeed = 0){
	for(let yi=0,j=off;yi<65;yi+=16) for(let xi=0;xi<65;xi+=16,j+=4) mem.setFloat32(j, cb(x+xi, y+yi), true)
	exports.fillNoise(x, y, localSeed)
	return ch
}
export function genNoisev(arr, x, y, localSeed = 0){
	for(let j=0;j<25;j++) mem.setFloat32(off+(j<<4), arr[j], true)
	exports.fillNoise(x, y, localSeed)
	return ch
}

const enc = new TextEncoder(), {imul} = Math
export function setSeed(str){
	if(str instanceof ArrayBuffer) return void(sd.set(new Int32Array(sd, 0, 8)))
	const arr = enc.encode(str+'\0')
	seed.fill(0)
	let x = 0xe336beb9|0, i = 0
	let coeff = 1597334673
	// Quick bijective hash
	for(; i < arr.length; i += 4){
		const y = arr[i]<<24|arr[i+1]<<16|arr[i+2]<<8|arr[i+3]
		x = imul(x ^ imul(y, coeff), 0x7feb352d)
		x ^= x >> 15
		coeff += 0x4319fa62
		seed[(i>>2)&7] ^= x
	}
	let j = i >>= 2; coeff = 1
	do{
		x = imul(x, coeff += 0x6eeb828a)
		x ^= x >> 15
		seed[j = j+1&7] ^= x
	}while(j != i)
	for(let i=0,j=sd;i<8;i++,j+=4) mem.setInt32(j, seed[i], true)
}

export function getSeedHash(){
	let x = ''
	for(const i of seed) x += (i>>>0).toString(16).padStart(8, '0')
	return x
}